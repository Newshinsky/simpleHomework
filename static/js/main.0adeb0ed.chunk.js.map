{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h8/style.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h2/Affairs.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h10/style.module.css","p2-homeworks/h7/common/c5-SuperSelect/superSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/superRadio.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","p2-homeworks/h10/bll/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","JuniorPlus","initState","isLoading","loadingAC","HW10","useSelector","state","loading","dispatch","useDispatch","loader","action","setTimeout","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanStyle","inputClassName","inputStyle","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","oldValue","SuperSelect","options","onChangeOption","mappedOptions","map","superSelect","SuperRadio","name","onChangeCallback","i","superRadio","arr","HW7","homeWorkReducer","copyState","sort","a","b","age","payload","reverse","filter","initialPeople","_id","HW8","people","setPeople","finalPeople","p","defStyle","id","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","getDate","getMonth","getFullYear","onMouseEnter","onMouseLeave","window","setInterval","HW9","Junior","Message","props","messageWrapper","ava","src","avatar","alt","message","triangle","time","messageData","HW1","Affair","deleteAffairCallback","affair","priority","Affairs","mappedAffairs","data","setFilter","defaultAffairs","HW2","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","inputClass","GreetingContainer","users","addUserCallback","setName","setError","length","charCode","HW3","setUsers","newUser","v1","PreJunior","PATH","Routes","path","exact","render","to","Header","HW5","App","reducers","combineReducers","store","createStore","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0adeb0ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__1_43j\",\"ava\":\"Message_ava__2aMHO\",\"time\":\"Message_time__3qVhe\",\"message\":\"Message_message__3xJ0T\",\"text\":\"Message_text__3VB8g\",\"name\":\"Message_name__2tXIe\",\"triangle\":\"Message_triangle__1fHcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defStyle\":\"style_defStyle__7HkRj\",\"id\":\"style_id__135SB\",\"name\":\"style_name__19UIB\",\"age\":\"style_age__3SkaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2b3lQ\",\"errorInput\":\"SuperInputText_errorInput__U7-X0\",\"error\":\"SuperInputText_error__3x4NT\",\"shadows\":\"SuperInputText_shadows__1Ck9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2xncA\",\"column\":\"HW4_column__3Uj27\",\"testSpanError\":\"HW4_testSpanError__2szhh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__V58dq\",\"red\":\"SuperButton_red__3TQOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3anTt\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Uy8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanStyle\":\"SuperEditableSpan_spanStyle__2kp_B\",\"inputStyle\":\"SuperEditableSpan_inputStyle__1neaA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Affairs_name__3iGkb\",\"priority\":\"Affairs_priority__3zqlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__DsAo3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"style_loader__2Ncl9\",\"spin\":\"style_spin__2Qe3n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSelect\":\"superSelect_superSelect__1KB94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superRadio\":\"superRadio_superRadio__dVI_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2P0K7\",\"error\":\"Greeting_error__3l0FJ\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n            && e.key === 'Enter' // и если нажата кнопка Enter\n            && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, { ChangeEvent, useState } from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Please enter text'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    \n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr />\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange} />\n            </div>\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\r\nimport HW4 from '../../h4/HW4'\r\n\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n\r\n            <HW4 />\r\n            {/*<HW7/>*/}\r\n            {/*<HW8/>*/}\r\n            {/*<HW9/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n","const initState = {\n    isLoading: false\n}\n\n\nconst SHOW_LOADING = 'SHOW_LOADING'\n\nexport type showLoadingACType = {\n    type: typeof SHOW_LOADING\n    isLoading: boolean\n\n}\n\ntype initStateType = {\n    isLoading: boolean\n}\n\n\n\n\n\nexport const loadingReducer = (state: initStateType = initState, action: showLoadingACType): initStateType => { // fix any\n    switch (action.type) {\n        case SHOW_LOADING: {\n            let copyState = { ...state, isLoading: action.isLoading }\n            return copyState\n        }\n        default: return state\n    }\n}\n\nexport const loadingAC = (isLoading: boolean): showLoadingACType => {\n    return { type: SHOW_LOADING, isLoading }\n} // fix any","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport { loadingAC } from './bll/loadingReducer'\nimport { AppStoreType } from './bll/store'\nimport s from \"./style.module.css\"\nfunction HW10() {\n    const isLoading = useSelector<AppStoreType, boolean>(state => state.loading.isLoading)\n    const dispatch = useDispatch();\n    // useSelector, useDispatch\n\n\n    const setLoading = () => {\n        const action = loadingAC(true)\n        dispatch(action);\n\n        setTimeout(() => dispatch(loadingAC(false)), 1000)\n\n    };\n\n    return (\n        <div>\n            <hr />\n            homeworks 10\n\n            {/*should work (должно работать)*/}\n            {isLoading\n                ? (\n                    <div className={s.loader}> </div>\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW10\n","import React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState } from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from \"./SuperEditableSpan.module.css\"\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.spanStyle}`\n    const inputClassName = `${s.inputStyle}`\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        className={inputClassName}\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', { x: 'A', y: 1 })\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', { x: '', y: 0 })\n","import React, { useState } from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport { restoreState, saveState } from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        let oldValue = restoreState<string>('editable-span-value', value)\n        setValue(oldValue)\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{ children: value ? undefined : 'enter text...' }}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW6\n","import React, { SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent } from 'react'\nimport s from \"./superSelect.module.css\"\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options: Array<string>\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions = options?.map(e => {\n        return (\n            <option value={e} >\n                {e}\n            </option>\n        )\n    }); // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select className = {s.superSelect} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, { ChangeEvent, InputHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from \"./superRadio.module.css\"\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options: Array<string>\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const mappedOptions: any[] = options ? options.map((e, i) => ( // map options with key\n        <label  key={name + '-' + i}>\n\n            <input\n               className={s.superRadio} \n                type={'radio'}\n                name={name}\n                value={e}\n                onChange={onChangeCallback}\n                checked={value === e ? true : false}\n            // name, checked, value, onChange\n            />\n            {e}\n\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import { UserType } from \"../HW8\"\n\nexport type sortUp = {\n    type: 'sort'\n    payload: 'up'\n}\nexport type sortDown = {\n    type: 'sort'\n    payload: 'down'\n}\nexport type checkNum = {\n    type: 'check'\n    payload: number\n}\n\ntype ActionsType =\n    checkNum |\n    sortDown |\n    sortUp\n\nexport const homeWorkReducer = (state: Array<UserType>, action: ActionsType): Array<UserType> => { // need to fix any\n    switch (action.type) {\n        case 'sort':\n            let copyState = [...state]\n            copyState = copyState.sort(function (a, b) {\n                if (a.age > b.age) {\n                    return 1;\n                }\n                if (a.age < b.age) {\n                    return -1;\n                }\n                return 0;\n            })\n            return action.payload === \"up\" ? copyState : copyState.reverse()\n        case 'check': {\n            let copyState = [...state]\n            copyState = copyState.filter(e => e.age >= action.payload)\n\n            return copyState\n        }\n        default: return state\n    }\n}\n","import React, { useState } from 'react'\nimport { homeWorkReducer } from './bll/homeWorkReducer'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport s from './style.module.css'\nexport type UserType = {\n    _id: number,\n    name: string,\n    age: number\n}\n\n\nconst initialPeople = [\n    { _id: 0, name: 'Кот', age: 3 },\n    { _id: 1, name: 'Александр', age: 66 },\n    { _id: 2, name: 'Коля', age: 16 },\n    { _id: 3, name: 'Виктор', age: 44 },\n    { _id: 4, name: 'Дмитрий', age: 40 },\n    { _id: 5, name: 'Ирина', age: 55 },\n]\n\n\n\nfunction HW8() {\n    const [people, setPeople] = useState<Array<UserType>>(initialPeople) // need to fix any\n\n    // need to fix any\n    const finalPeople = people.map((p: UserType) => (\n        <div className={s.defStyle} key={p._id}>\n            <span className={s.id}> {p._id} </span>\n            <span className={s.name}> {p.name} </span>\n            <span className={s.age}> {p.age} </span>\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, { type: 'sort', payload: 'up' }))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, { type: 'sort', payload: 'down' }))\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, { type: \"check\", payload: 18 }))\n    return (\n        <div>\n            <hr />\n            homeworks 8\n            {/*should work (должно работать)*/}\n            {finalPeople}\n            <div >\n                <div ><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n                <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n                <div><SuperButton onClick={check18}>check 18</SuperButton></div>\n            </div>\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW8\n","import React, { useState } from 'react'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0)\n    const [date, setDate] = useState<Date>(new Date())\n    const [show, setShow] = useState<boolean>(false)\n\n    const stop = () => {\n        clearInterval(timerId)\n    }\n    const start = () => {\n        stop()\n\n        const id: number = window.setInterval(() => {\n            setDate(new Date())\n        }, 1000)\n        setTimerId(id)\n    }\n\n    const onMouseEnter = () => {\n        setShow(true)\n    }\n    const onMouseLeave = () => {\n        setShow(false)\n    }\n\n    const stringTime = `${date.getHours()} : ${date.getMinutes()} : ${date.getSeconds()} ` // fix with date\n    const stringDate = `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}` // fix with date\n\n    return (\n        <div>\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n            </div>\n\n            {show && (\n                <div>\n                    {stringDate}\n                </div>\n            )}\n\n            <SuperButton onClick={start}>start</SuperButton>\n            <SuperButton onClick={stop}>stop</SuperButton>\n\n        </div>\n    )\n}\n\nexport default Clock\n","import React from 'react'\nimport Clock from './Clock'\n\nfunction HW9() {\n    return (\n        <div>\n            <hr />\n            homeworks 9\n\n            {/*should work (должно работать)*/}\n            <Clock />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW9\n","import React from 'react'\r\nimport HW10 from '../../h10/HW10'\r\nimport HW6 from '../../h6/HW6'\r\nimport HW7 from '../../h7/HW7'\r\nimport HW8 from '../../h8/HW8'\r\nimport HW9 from '../../h9/HW9'\r\n\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW6 />\r\n            <HW7 />\r\n            <HW8 />\r\n            <HW9 />\r\n            <HW10 />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n","import React from 'react'\nimport s from './Message.module.css'\ntype PropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: PropsType) {\n    return (\n        <div className={s.messageWrapper}>\n            <div className={s.ava}>\n                <img src={props.avatar} alt=\"ava\" />\n            </div>\n            <div className={s.message}>\n                <div className={s.triangle}>\n                </div>\n                <div className={s.name}>\n                    <p> {props.name}</p>\n                </div>\n                <div className={s.text}>\n                    <p>{props.message}</p>\n                </div>\n                <div className={s.time}>\n                    {props.time}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Yasos Bib',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n            avatar={messageData.avatar}\n            name={messageData.name}\n            message={messageData.message}\n            time={messageData.time}\n          /> \n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback:Function // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n              <button onClick={deleteCallback}>X</button>\n           <span className={s.name}> {props.affair.name} </span>\n           <span className={s.priority}> {props.affair.priority} </span>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) =>void\n    deleteAffairCallback: (id:number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | \"low\" | \"middle\" // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'all') return affairs\n   \n    // } else if (filter === 'high') {\n    //     return affairs.filter((e) => {\n    //         e.priority === 'high'\n    //     })\n    // } else if (filter === 'middle'){\n    //     return   affairs.filter((e) => {\n    //         e.priority === 'middle'\n    //     })\n    // } else if(filter === 'low'){\n    //     return affairs.filter((e) => {\n    //         e.priority === 'low'\n    //     })\n\n    // } else{\n    //     return []\n    // }\n    else return affairs.filter(e =>  e.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((e) => {\n        if (e._id !== _id) {\n            return true\n        } else {\n            return false\n        }\n\n    })\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr />\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string// need to fix any\n    totalUsers: number // need to fix any\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error; // need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onKeyPress={onEnter}\n                />\n                <button onClick={addUser}>add</button>\n                <span>{totalUsers}</span>\n            </div>\n            <span className={s.error}>\n                {error}\n            </span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { ChangeEvent,KeyboardEvent,useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement> ) => { // need to fix any\n        setName(e.currentTarget.value) // need to fix\n    }\n    const addUser = () => {\n        if (name.length === 0) {\n           setError('Введите данные')\n        } else {\n            addUserCallback(name)\n            alert(`Hello ${name} !`)\n            setError('')\n            setName('') // need to fix\n        }\n    }\n\n    const onEnter = (e:KeyboardEvent<HTMLInputElement>) => {\n        if(e.charCode === 13){\n            addUser()\n        }\n    }\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter = {onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, { useState } from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        let newUser = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users, newUser]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW3\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1 />\n            <HW2 />\n            <HW3 />\n            <HW4 />\n           \n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport Error404 from './pages/Error404'\nimport JuniorPlus from './pages/JuniorPlus'\nimport Junior from './pages/Junior'\nimport PreJunior from './pages/PreJunior'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIORPLUS: '/junior-plus',\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать пFолное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n\n                <Route path={'/'} exact render={() => <Redirect to={PATH.JUNIOR} />} />\n                <Route path={PATH.JUNIOR} render={() => <Junior />} />\n\n                <Route path={'/'} exact render={() => <Redirect to={PATH.JUNIORPLUS} />} />\n                <Route path={PATH.JUNIORPLUS} render={() => <JuniorPlus />} />\n                {/* // add routes */}\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404 />} />\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { PATH } from './Routes'\n\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to={PATH.PRE_JUNIOR} > PreJunior  </NavLink>\n            <NavLink to={PATH.JUNIOR} > Junior  </NavLink>\n            <NavLink to={PATH.JUNIORPLUS} > JuniorPlus  </NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header />\n                <Routes />\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/* <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/> */}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","import { combineReducers, createStore } from 'redux'\nimport { loadingReducer } from './loadingReducer'\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n\n})\n\nconst store = createStore(reducers)\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store // for dev\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport store from './p2-homeworks/h10/bll/store'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store} >\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>,\n    </Provider>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}